import pandas as pd
import numpy as np

# Create a sample dataset
data = {
    'area': [1000, 1500, 1200, 1800, 900, 1300],
    'bedrooms': [3, 4, 3, 4, 2, 3],
    'age': [10, 5, 12, 8, 15, 7],
    'price': [200000, 350000, 250000, 400000, 180000, 300000]
}

df = pd.DataFrame(data)

# Save to CSV
df.to_csv('house_data.csv', index=False) # index=False prevents pandas from adding its own index column

print("CSV file 'house_data.csv' created successfully!

df = pd.read_csv('house_data.csv')

# Features and label
X = df[['area', 'bedrooms', 'age']]
y = df['price']
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import joblib

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

# Save the model
joblib.dump(model, 'model.pkl')
['model.pkl']
from flask import Flask, request, jsonify
import joblib
import numpy as np

app = Flask(__name__)

# Load the trained model
model = joblib.load('model.pkl')

@app.route('/')
def home():
    return "Welcome to House Price Predictor API!"

@app.route('/predict', methods=['POST'])
def predict():
    data = request.get_json()
    area = data['area']
    bedrooms = data['bedrooms']
    age = data['age']
    
    prediction = model.predict([[area, bedrooms, age]])
    return jsonify({'predicted_price': prediction[0]})

if __name__ == '__main__':
    app.run(debug=True)
